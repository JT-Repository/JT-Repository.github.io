<!DOCTYPE html>
<html lang="en">
<head>
<title>CourseFinder&trade;</title>
<meta charset="UTF-8">
<meta name="robots" content="noindex, nofollow">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<!--<link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css"Â rel="stylesheet">-->
<script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio,line-clamp"></script>
<style> 
    
    @import url('https://fonts.googleapis.com/css2?family=Lato:wght@200;300;400;600;800;900&display=swap');

    @font-face {
        font-family: 'MADE Tommy Soft';
        src: url('data:font/woff2;charset=utf-8;base64,') format('woff2'),
            url('data:font/woff;charset=utf-8;base64,') format('woff');
    }
    
    body {
        font-family: 'Lato', sans-serif;
        font-weight: 400;
    }
    .custom-font {
        font-family: 'MADE Tommy Soft';
        font-weight: 900;
        font-style: normal;
    }

    details summary::-webkit-details-marker {
        display: none !important;
    }
    summary:hover .summary-arrow svg {
        color: rgb(22,163,4);
    }
    details[open] summary:hover .summary-arrow svg {
        color: currentColor;
        opacity: .1;
    }
    details:not([open]) summary .summary-arrow {
        transform-origin: center;
        transform: rotate(180deg);
    }
  
</style>
</head>
<body>
    
    <!-- GREEN MENU STRIP -->
    <div x-data="topMenu()">
        <div class="bg-green-600 fixed w-full drop-shadow-md z-20 lg:relative lg:z-0">
            <div class="container relative mx-auto px-4 lg:px-6 py-3 xl:py-3.5" :class="{ 'pt-6 px-6' : isOpen }">
                <nav>
                    <button class="flex w-full items-center font-bold text-white hover:text-yellow-500 focus:text-white focus:outline-none lg:hidden" type="button" @click="isOpen = !isOpen">
                        <img class="inline-block w-5 h-5" :class="{ '-rotate-90 duration-200 origin-center' : isOpen , 'duration-300' : !isOpen }" src="golf-pin.png"> <span class="ml-0.5">MENU</span>
                    </button>
                    <div class="w-full items-start lg:items-center lg:justify-end" :class="{ 'flex flex-col py-3' : isOpen, 'hidden lg:flex' : !isOpen }">
                        <a class="inline-flex lg:pl-3 text-md text-white hover:text-yellow-500 active:text-yellow-400" href="#" @click="isOpen = !isOpen">About Us</a>
                        <a class="inline-flex lg:pl-3 text-md text-white hover:text-yellow-500 active:text-yellow-400" href="#" @click="isOpen = !isOpen">Members Area</a>
                    </div>
                </nav>
            </div>
        </div>
    </div>
    <!-- SEARCH COMPONENT -->
    <div x-data="searchCourses()">
        <div class="bg-white relative pt-12 md:pt-14 lg:border-t-2 lg:border-green-600 lg:sticky lg:pt-0 lg:top-0 lg:z-20">
            <div class="container mx-auto px-4 lg:px-6 p-7 xl:py-8">
                <div class="flex flex-col md:flex-row md:justify-between">
                    <div class="flex justify-center align-items mb-3 md:mb-0 space-x-1 md:space-x-1.5 lg:space-x-2 xl:space-x-2.5 logo">
                        <img class="inline-block" src="golf-pin.png">
                        <div class="inline-block font-extrabold text-zinc-500 text-3xl xl:text-4xl custom-font after:content-['&trade;'] after:relative after:font-sans after:text-xs after:align-top after:top-1">CourseFinder</div>
                    </div>
                    <form class="flex justify-center md:float-right space-x-1.5 md:space-x-2 lg:space-x-2.5 xl:space-x-3">
                        <label>
                            <span class="sr-only">Search by course name</span>
                            <input class="w-44 sm:w-52 md:w-48 lg:w-56 xl:w-60 p-2 border border-zinc-200 caret-green-600 placeholder:text-zinc-400 focus:outline-none focus:border-yellow-500 focus:ring-0 focus:text-zinc-500 transition duration-500 ease-out focus:duration-500 focus:ease-in" type="search" placeholder="Search by course name" id="courseSearch" x-ref="searchField" x-model="search" x-on:click="viewPage(0)" x-on:keydown.window.prevent.slash="viewPage(0), $refs.searchField.focus()" />
                        </label>
                        <label>
                            <span class="sr-only">Search by county</span>
                            <select class="w-44 sm:w-52 md:w-48 lg:w-56 xl:w-60 p-2 border border-zinc-200 text-zinc-400 outline-none focus:border-yellow-500 focus:ring-0 focus:text-zinc-500 transition duration-500 ease-out focus:duration-500 focus:ease-in" x-model="search">
                                <option>Search by county</option>
                                <template x-for="item in countyList" :key="index">
                                    <option :value="item" x-text="item"></option>
                                </template>
                            </select>
                        </label>
                    </form>
                </div>
            </div>
        </div>  
        <!-- PRELOADER -->
        <div x-show="loadingCourses">
            <div class="flex justify-center items-center">
                <div class="text-lg md:text-xl lg:text-2xl xl:text-3xl text-green-600"><span class="font-bold">Loading...</span> course search</div>
            </div>
        </div>
        <div class="container mx-auto px-4 lg:px-6 py-6 xl:py-8 pt-0.5">
            <!-- SEARCH RESULTS -->
            <div class="flex flex-col lg:flex-row lg:flex-wrap" :class="{ 'lg:flex-col xl:flex-row' : search }">
                <!-- RESULTS MESSAGING -->
                <div class="w-full pb-3 lg:pb-4 opacity-0 order-1" :class="{ 'opacity-100' : !loadingCourses }">
                    <div class="flex justify-center md:justify-start mx-4 md:mx-6">
                        <div class="text-zinc-500" x-show="total > 0">
                            <span x-show="search">
                                <span>Displaying </span>
                                <span class="font-bold mx-1" x-text="endResults()" x-show="total > 1"></span>
                                <span x-show="total > 1">of </span>
                            </span>
                            <span class="font-bold mx-1" x-text="total"></span> 
                            <span>course<span x-show="total > 1">s</span></span>
                            <span class="" x-show="!search">.</span>
                            <span class="mx-1" x-show="search">for</span>
                            <span x-show="search" class="font-bold" x-text="search"></span>
                            <span class="inline-flex mx-2 pb-2 items-center" x-show="!search">Please refine your search above. 
                                <!--<svg class="text-green-600 ml-2 animate-bounce" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
                                </svg>-->
                            </span>
                        </div>
                        <div class="text-zinc-500 opacity-0" :class="{ 'opacity-100 my-6 xl:mb-8' : total==0 }" x-show="total==0">
                            <p>There are no courses listed for <span class="font-bold" x-text="search"></span>. Please search again.</p>
                        </div>
                    </div>
                </div>
                <!-- COURSES -->
                <div class="w-full xl:w-3/4 mb-2 md:mb-4 lg:mb-6 xl:mb-0 order-2" :class="{ 'hidden' : total==0 }" x-show="!loadingCourses">
                    <!--<div class="absolute bg-white bg-opacity-90 w-full h-full z-10" :class="{ 'hidden' : search }"></div>-->
                    <div class="flex flex-col mb-6 xl:mb-8 mx-4 md:mx-6 xl:mr-16 border-t border-zinc-200">
                        
                        <template x-for="item in getSearchResults" :key="item.id">

                            <div x-data="{ cardOpen: false }">

                                <div class="py-2 xl:py-2.5 border-b border-zinc-200" :class="{ '-mx-2 md:-mx-3 px-5 border-0 outline outline-2 outline-yellow-500 bg-zinc-100 bg-opacity-20 rounded-lg' : cardOpen }">

                                    <button class="flex w-full font-bold cursor-pointer text-lg lg:text-xl xl:text-2xl text-zinc-500 hover:text-green-600 active:text-yellow-500 focus:outline-0" :class="{ 'mt-2 lg:mt-3 hover:text-zinc-500' : cardOpen }" @click="cardOpen = true" x-text="item.title"></button>

                                    <div x-show="cardOpen" @click.outside="cardOpen = false">

                                        <div class="flex flex-wrap items-center justify-between text-zinc-500 border-b border-zinc-200 pb-1.5">
                                            <div class="space-x-0.5">
                                                <span x-text="item.location.address"></span>, <span x-text="item.location.town"></span>, <span x-text="item.location.county"></span>
                                            </div>
                                            <div class="self-end">
                                                <a class="text-zinc-500 hover:text-green-600 focus:text-yellow-500" x-bind:href="'https://www.google.com/maps/@' + item.location.lat + ',' + item.location.lng + ',12z/data=!5m1!1e1'" target="_blank">Directions</a>
                                            </div>
                                        </div>

                                        <div class="flex w-full flex-col">

                                            <div class="py-2 lg:py-3 border-b border-zinc-200">
                                                <details class="cursor-pointer open:cursor-text" x-data="{}" x-ref="overview" @click.outside="$refs.overview.removeAttribute('open');" open>
                                                    <summary class="flex justify-start items-center">
                                                        <span class="font-bold text-lg text-zinc-500 focus:text-yellow-500 mr-3">Course Overview</span>
                                                        <span class="summary-arrow">
                                                            <svg class="text-zinc-200" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 16 16">
                                                                <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
                                                            </svg>
                                                        </span>
                                                    </summary>
                                                    <div class="my-3 lg:px-3 xl:px-8">
                                                        <div class="text-zinc-500" x-text="item.description"></div>
                                                    </div>
                                                </details>
                                            </div>

                                            <div class="py-2 lg:py-3 border-b border-zinc-200">
                                                <details class="cursor-pointer open:cursor-text" x-data="{}" x-ref="stats" @click.outside="$refs.stats.removeAttribute('open');">
                                                    <summary class="flex justify-start items-center">
                                                        <span class="font-bold text-lg text-zinc-500 focus:text-yellow-500 mr-3">Course Statistics</span>
                                                        <span class="summary-arrow">
                                                            <svg class="text-zinc-200" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 16 16">
                                                                <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
                                                            </svg>
                                                        </span>
                                                    </summary>
                                                    <div class="my-3 lg:px-3 xl:px-8 hidden md:flex">
                                                        <table class="w-full text-sm lg:text-md text-center border-collapse border border-zinc-200 my-3 select-none">
                                                            <tr class="text-zinc-500">
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5"></th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">1</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">2</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">3</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">4</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">5</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">6</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">7</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">8</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">9</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">10</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">11</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">12</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">13</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">14</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">15</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">16</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">17</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">18</th>
                                                                <th class="border border-zinc-200 p-1.5 lg:p-2 xl:p-2.5">Total</th>
                                                            </tr>
                                                            <tr class="bg-red-500/20 text-zinc-600">
                                                                <td class="border border-zinc-200 py-1.5 lg:px-2 xl:px-2.5 lg:py-2 xl:py-2.5 bg-red-500 text-white md:text-xs text-sm font-semibold">Red</td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.one.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.two.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.three.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.four.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.five.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.six.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seven.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eight.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.nine.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.ten.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eleven.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.twelve.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.thirteen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fourteen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fifteen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.sixteen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seventeen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eighteen.red"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5 bg-red-500 text-white md:text-xs text-sm font-semibold" x-text="item.pins.one.red + item.pins.two.red + item.pins.three.red + item.pins.four.red + item.pins.five.red + item.pins.six.red + item.pins.seven.red + item.pins.eight.red + item.pins.nine.red + item.pins.ten.red + item.pins.eleven.red + item.pins.twelve.red + item.pins.thirteen.red + item.pins.fourteen.red + item.pins.fifteen.red + item.pins.sixteen.red + item.pins.seventeen.red + item.pins.eighteen.red"></td>
                                                            </tr>
                                                            <tr class="bg-yellow-400/40 text-zinc-600">
                                                                <td class="border border-zinc-200 py-1.5 lg:px-2 xl:px-2.5 lg:py-2 xl:py-2.5 bg-yellow-400 md:text-xs text-sm font-semibold">Yellow</td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.one.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.two.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.three.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.four.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.five.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.six.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seven.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eight.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.nine.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.ten.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eleven.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.twelve.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.thirteen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fourteen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fifteen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.sixteen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seventeen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eighteen.yellow"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5 bg-yellow-400 md:text-xs text-sm font-semibold" x-text="item.pins.one.yellow + item.pins.two.yellow + item.pins.three.yellow + item.pins.four.yellow + item.pins.five.yellow + item.pins.six.yellow + item.pins.seven.yellow + item.pins.eight.yellow + item.pins.nine.yellow + item.pins.ten.yellow + item.pins.eleven.yellow + item.pins.twelve.yellow + item.pins.thirteen.yellow + item.pins.fourteen.yellow + item.pins.fifteen.yellow + item.pins.sixteen.yellow + item.pins.seventeen.yellow + item.pins.eighteen.yellow"></td>
                                                            </tr>
                                                            <tr class="text-zinc-600">
                                                                <td class="border border-zinc-200 py-1.5 lg:px-2 xl:px-2.5 lg:py-2 xl:py-2.5 bg-white md:text-xs text-sm font-semibold">White</td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.one.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.two.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.three.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.four.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.five.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.six.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seven.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eight.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.nine.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.ten.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eleven.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.twelve.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.thirteen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fourteen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.fifteen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.sixteen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.seventeen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5" x-text="item.pins.eighteen.white"></td>
                                                                <td class="border border-zinc-200 py-1.5 lg:py-2 xl:py-2.5 bg-white md:text-xs text-sm font-semibold" x-text="item.pins.one.white + item.pins.two.white + item.pins.three.white + item.pins.four.white + item.pins.five.white + item.pins.six.white + item.pins.seven.white + item.pins.eight.white + item.pins.nine.white + item.pins.ten.white + item.pins.eleven.white + item.pins.twelve.white + item.pins.thirteen.white + item.pins.fourteen.white + item.pins.fifteen.white + item.pins.sixteen.white + item.pins.seventeen.white + item.pins.eighteen.white"></td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                </details>
                                            </div>

                                            <div class="py-2 lg:py-3">
                                                <details class="cursor-pointer open:cursor-text" x-data="{}" x-ref="reviews" @click.outside="$refs.reviews.removeAttribute('open');">
                                                    <summary class="flex justify-start items-center">
                                                        <span class="font-bold text-lg text-zinc-500 mr-3">Course Reviews</span>
                                                        <span class="summary-arrow">
                                                            <svg class="text-zinc-200" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 16 16">
                                                                <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
                                                            </svg>
                                                        </span>
                                                    </summary>
                                                    <div class="my-3 lg:px-3 xl:px-8">
                                                        content
                                                    </div>
                                                </details>
                                            </div>

                                        </div>

                                    </div>
                                    
                                </div>
                                
                            </div>

                        </template>
                    </div>
                </div>
                <!-- PAGINATION -->
                <div class="w-full -mt-2 md:-mt-4 mb-6 lg:mb-7 xl:mb-6 xl:mt-0 xl:mb-2 order-3 xl:order-4" x-show="total < 50" :class="{ 'hidden' : total < 10 }">
                    <div class="flex flex-row justify-center items-center">
                        <button class="inline-block mx-1 md:mx-2 xl:mx-3 hover:scale-125 focus:outline-0" x-on:click="viewPage(0)" :disabled="pageNumber==0" :class="{ 'disabled cursor-not-allowed' : pageNumber==0 }">
                            <svg class="text-zinc-500 hover:text-green-600 active:text-yellow-500" :class="{ 'text-zinc-200 hover:text-zinc-200 active:text-zinc-200' : pageNumber==0 }" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="15 18 9 12 15 6"></polyline>
                                <line x1="5" y1="19" x2="5" y2="5"></line>
                            </svg>   
                        </button>
                        <button class="inline-block mx-1 md:mx-2 xl:mx-3 hover:scale-125 focus:outline-0" x-on:click="prevPage" :disabled="pageNumber==0" :class="{ 'disabled cursor-not-allowed text-gray-600' : pageNumber==0 }">
                            <svg class="text-zinc-500 hover:text-green-600 active:text-yellow-500" :class="{ 'text-zinc-200 hover:text-zinc-200 active:text-zinc-200' : pageNumber==0 }" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="15 18 9 12 15 6"></polyline>
                            </svg>
                        </button>
                        <template x-for="(page, index) in pages" :key="index">
                            <button class="inline-block px-3 py-1 mx-2 hover:bg-green-600 hover:text-white hover:font-bold hover:scale-105 active:bg-yellow-500 active:text-white focus:outline-0" :class="{ 'm-l-1 bg-green-600 text-white font-bold active:bg-green-600 disabled cursor-not-allowed' : index === pageNumber }" x-on:click="viewPage(index)">
                                <span x-text="index+1"></span>
                            </button>
                        </template>
                        <button class="inline-block mx-1 md:mx-2 xl:mx-3 hover:scale-125 focus:outline-0" x-on:click="nextPage" :disabled="pageNumber >= pageCount() -1" :class="{ 'disabled cursor-not-allowed text-gray-600' : pageNumber >= pageCount() -1 }">
                            <svg class="text-zinc-500 hover:text-green-600 active:text-yellow-500" :class="{ 'text-zinc-200 hover:text-zinc-200 active:text-zinc-200' : pageNumber >= pageCount() -1 }" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="9 18 15 12 9 6"></polyline>
                            </svg>
                        </button>
                        <button class="inline-block mx-1 md:mx-2 xl:mx-3 hover:scale-125 focus:outline-0" x-on:click="viewPage(Math.ceil(total/size)-1)" :disabled="pageNumber >= pageCount() -1" :class="{ 'disabled cursor-not-allowed text-gray-600' : pageNumber >= pageCount() -1 }">
                            <svg class="text-zinc-500 hover:text-green-600 active:text-yellow-500" :class="{ 'text-zinc-200 hover:text-zinc-200 active:text-zinc-200' : pageNumber >= pageCount() -1 }" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
                                <polyline points="9 18 15 12 9 6"></polyline>
                                <line x1="19" y1="5" x2="19" y2="19"></line>
                            </svg>
                        </button>
                    </div>
                </div>
                <!-- SIGNUP -->
                <div class="w-full xl:w-1/4 order-4 lg:order-3" :class="{ 'xl:w-full' : total==0 }" x-show="!loadingCourses">
                    <div class="flex flex-col bg-[url('https://media.gettyimages.com/photos/close-up-the-golf-ball-on-tee-pegs-ready-to-play-in-the-green-picture-id976341586?b=1&k=20&m=976341586&s=170667a&w=0&h=GGcKbJau1d_7uhXhCByYlrGco_hfqnQwFUSLp1U35ZM=')] bg-bottom bg-cover">
                        <div class="flex flex-col justify-evenly p-8 xl:px-4 xl:py-24 bg-green-600 bg-opacity-50" :class="{ 'xl:py-10' : total==0 }">
                            <div class="font-extrabold text-xl lg:text-2xl xl-text:3xl text-white text-center">
                                Sign up today to join our new online golfing community.
                            </div>
                            <div class="flex w-11/12 sm:w-10/12 md:w-full flex-col md:flex-row justify-center mx-auto mt-6 lg:mt-10 xl:mt-14 md:space-x-2 lg:space-x-3 xl:space-x-0 space-y-3 md:space-y-0 " :class="{ 'xl:flex-col xl:items-center xl:space-y-4' : !total==0 }">
                                <div class="inline-flex">
                                    <label class="" for="name"></label>
                                    <input class="flex-1 lg:w-60 px-2 py-1 mx-2 border border-zinc-200 caret-green-600 placeholder:text-zinc-400 focus:outline-none focus:border-yellow-500 focus:ring-0 focus:text-zinc-500 focus:transition duration-300 ease-in-out" type="text" placeholder="Your name" id="name" />
                                </div>
                                <div class="inline-flex">
                                    <label class="" for="email"></label>
                                    <input class="flex-1 lg:w-60 px-2 py-1 mx-2 border border-zinc-200 caret-green-600 placeholder:text-zinc-400 focus:outline-none focus:border-yellow-500 focus:ring-0 focus:text-zinc-500 focus:transition duration-300 ease-in-out" type="email" placeholder="Your email address" id="email" />
                                </div>
                                <div class="inline-flex">
                                    <button class="flex-1 w-48 px-2 py-1 mx-2 text-white bg-yellow-500 border border-yellow-500 focus:outline-none focus:text-zinc-500 focus:bg-yellow-400 focus:ring-0">Submit your details</button>
                                </div> 
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ADVERTISING BLOCK 1 -->
    <div x-data="">
        <div class="bg-white">
            <div class="container mx-auto px-4 lg:px-6 mt-4 mb-10 lg:mb-12">
                <img class="md:hidden min-w-full" src="425-sm.jpg" title="PING G425" />
                <img class="hidden md:block lg:hidden min-w-full" src="425-md.jpg" title="PING G425" />
                <img class="hidden lg:block min-w-full" src="425-lg.jpg" title="PING G425" />
            </div>
        </div>
    </div>
    <!-- FEATURED COMPONENT -->
    <div class="relative" x-data="getFeaturedCourse()">
        <!-- PRELOADER -->
        <div x-show="loadingFeatured">
            <div class="flex justify-center items-center pb-4 md:pb-6 xl:pb-10">
                <span class="text-lg md:text-xl lg:text-2xl xl:text-3xl text-green-600"><span class="font-bold">Loading...</span> featured course</span>
            </div>
        </div>
        <div class="bg-zinc-100 hover:bg-opacity-75">
            <div class="container mx-auto px-4 lg:px-6 py-6 lg:py-8 opacity-0" :class="{ 'opacity-100' : !loadingFeatured }">
                <div class="mb-6 font-extrabold text-center text-zinc-500 text-3xl xl:text-4xl custom-font">Featured Course</div>
                <div class="flex flex-wrap w-100 items-center">
                    <template x-for="item in featuredCourse" :key="index">
                        <template x-if="item.featured === true">
                            <div class="flex flex-col lg:flex-row items-center lg:items-start mb-4 lg:mb-2 space-y-6 lg:space-y-0 lg:space-x-8 xl:space-x-12">
                                <div class="w-5/6 lg:w-3/5 text-center lg:text-left">
                                    <h3 class="font-bold text-green-600 text-2xl lg:text-3xl" x-text="item.title"></h3>
                                    <div class="-mb-1 xl:text-lg text-zinc-500">
                                        <span class="" x-text="item.location.address"></span>
                                        <span class="" x-text="item.location.town"></span>
                                        <span class="" x-text="item.location.county"></span>
                                    </div>
                                    <a class="lowercase underline text-zinc-500 xl:text-lg hover:no-underline hover:text-green-600 focus:text-yellow-500" x-bind:href="'mailto:' + item.url" x-text="'www.' + item.title + '.com'"></a>
                                    <div class="mt-3" x-text="item.description"></div>
                                </div>
                                <div class="w-5/6 sm:w-4/5 md:w-3/4 lg:w-2/5 xl:w-1/3">
                                    <img class="object-fill drop-shadow-lg lg:aspect-square xl:aspect-auto" :src="item.image" />
                                </div>
                            </div>
                        </template>
                    </template>
                </div>
            </div>
        </div>
    </div>
    <!-- ADVERTISING BLOCK 2 -->
    <div x-data="">
        <div class="bg-white">
            <div class="container mx-auto px-4 lg:px-6 mt-10 lg:mt-12">
                <img class="min-w-full mb-6 lg:mb-8" src="tseries.png" title="Titleist T-Series" />
            </div>
        </div>
    </div>
    <!-- REVIEW (TO COME) -->
    <div x-data="getCourseReviews()">
        <!-- PRELOADER -->
        <div x-show="loadingReviews">
            <div class="flex justify-center items-center pb-4 md:pb-6 xl:pb-10">
                <span class="text-lg md:text-xl lg:text-2xl xl:text-3xl text-green-600"><span class="font-bold">Loading...</span> course reviews</span>
            </div>
        </div>
        <div class="bg-white">
            <div class="container mx-auto px-4 lg:px-6 py-6 lg:py-8 opacity-0" :class="{ 'opacity-100' : !loadingReviews }">
                <div class="mb-6 font-extrabold text-center text-zinc-500 text-3xl xl:text-4xl custom-font">Course Reviews</div>
                <div class=" pb-3 flex flex-row flex-nowrap items-start overflow-y-hidden overflow-x-auto overscroll-none snap-mandatory snap-x focus:touch-pan-x touch-pan-x">
                    <template x-for="(review, index) in courseReviews" :key="index">
                        <div class="flex p-5 pt-0 text-center lg:text-left snap-center">
                            <p class="w-96 sm:w-60 md:w-72 lg:w-80 xl:w-96 line-clamp-6" x-text="review.review_text"></p>
                        </div>
                    </template>
                </div>
                <div class="resize-none hover:resize">
                    <!-- ... -->
                </div>
            </div>
        </div>
    </div>
    <!-- FOOTER ELEMENTS -->
    <footer>
        <div class="bg-yellow-500">
            <div class="container mx-auto px-4 lg:px-6 py-6 lg:py-8">
                <div class="flex w-full flex-wrap md:flex-nowrap min-h-80 space-x-20 text-zinc-500" x-init="site = await (await fetch('golf.json')).json()" x-data="{ site: [] }">
                    <div class="flex w-2/6">
                        <div class="text-white" x-text="site.description"></div>
                    </div>
                    <div class="flex w-4/6 space-x-20">
                        <div class="w-2/6">
                            <div class="" x-text="site.otherkey1"></div>
                        </div>
                        <div class="w-2/6">
                            <div class="" x-text="site.otherkey2"></div>
                        </div>
                        <div class="w-2/6">
                            <div class="" x-text="site.otherkey3"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="bg-green-600">
            <div class="container mx-auto px-4 lg:px-6 py-3 xl:py-3.5">
                <div class="sm:flex sm:flex-wrap text-center sm:justify-between">
                    <div class="flex justify-evenly sm:justify-end">
                        <a class="px-2 sm:pr-0 sm:pl-2 md:pl-3 text-white hover:text-yellow-500 active:text-yellow-400" href="">Privacy Statement</a>
                        <a class="px-2 sm:pr-0 sm:pl-2 md:pl-3 text-white hover:text-yellow-500 active:text-yellow-400" href="">Terms &amp; Conditions</a>
                    </div>
                    <div class="block sm:flex sm:order-first" x-init="root = await (await fetch('golf.json')).json()" x-data="{ root: [] }">
                        <div class="text-white">&copy; 2022 <span x-text="root.name"></span>. All rights reserved.</div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    
    <script>
 
        function topMenu() {
            return {
                isOpen: false
            }
        }
        
        function searchCourses() {
            return {
                loadingCourses: false,
                countyList: '',
                search: '',
                searchResults: '',
                pageNumber: 0,
                size: 10,
                total: '',
                init() {
                    loadingCourses = true
                    fetch('golf.json')
                        .then(res => res.json())
                        .then(json => {
                            loadingCourses = false
                            this.searchResults = json.courses;
                            this.countyList = [...new Set(this.searchResults.map(item => item.location.county))].sort();
                            console.log('Courses loaded')
                    })
                },
                getSearchResults() {
                    const start = this.pageNumber * this.size,
                    end = start + this.size;
                    if (this.search === "") {
                        this.total = this.searchResults.length;
                        return this.searchResults.slice(start, end);
                    }
                    this.total = this.searchResults.filter((item) => {
                        return (item.title + item.location.county)
                            .toLowerCase()
                            .includes(this.search.toLowerCase());
                        }).length;
                    return this.searchResults
                    .filter((item) => {
                        return (item.title + item.location.county)
                            .toLowerCase()
                            .includes(this.search.toLowerCase());
                        })
                    .slice(start, end);
                },
                // pagination
                pages() {
                    return Array.from({
                        length: Math.ceil(this.total / this.size),
                    });
                },
                nextPage() {
                    this.pageNumber++;
                },
                prevPage() {
                    this.pageNumber--;
                },
                pageCount() {
                    return Math.ceil(this.total);
                },
                startResults() {
                    return this.pageNumber * this.size + 1;
                },
                endResults() {
                    let resultsOnPage = (this.pageNumber + 1) * this.size;
                    if (resultsOnPage <= this.total) {
                        return resultsOnPage;
                    }
                    return this.total;
                },
                viewPage(index) {
                    this.pageNumber = index;
                }
            }
        }
        
        function getFeaturedCourse() {
            return {
                loadingFeatured: false,
                featuredCourse: [],
                init() {
                    loadingFeatured = true
                    fetch('golf.json')
                        .then(res => res.json())
                        .then(json => {
                            loadingFeatured = false
                            this.featuredCourse = json.courses;
                            console.log('Featured course loaded')
                    })
                }
            }
        }
        
        function getCourseReviews() {
            return {
                loadingReviews: false,
                courseReviews: [],
                init() {
                    loadingReviews = true
                    fetch('https://www.fakerestapi.com/datasets/api/v1/amazon-echo-reviews.json')
                        .then(res => res.json())
                        .then(json => {
                            loadingReviews = false
                            this.courseReviews = json.data;
                            console.log('Reviews loaded')
                    })
                }
            }
        }

    </script>
    
    <script src="https://unpkg.com/alpinejs@3.10.2/dist/cdn.min.js" defer></script>

</body>
</html>